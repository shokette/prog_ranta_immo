services:
  web:
    build: .
    command: >
      sh -c '
      chown -R ${UID:-1000}:${GID:-1000} /app/tmp &&
      find /app/tmp -type d -exec chmod 777 {} + &&
      find /app/tmp -type f -exec chmod 666 {} + &&
      rm -f /app/tmp/pids/server.pid &&
      bundle exec rails s -p 3000 -b "0.0.0.0"'
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=mysql2://root:${DB_PASSWORD:-password}@db:3306/${DB_NAME:-progrando_${RAILS_ENV:-development}}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES:-false}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-development_key}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - tmp_data:/app/tmp
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 60s
      timeout: 10s
      retries: 3
    user: root
    tty: true
    stdin_open: true

  sidekiq:
    build: .
    command: bundle exec sidekiq
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=mysql2://root:${DB_PASSWORD:-password}@db:3306/${DB_NAME:-progrando_${RAILS_ENV:-development}}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-development_key}
    volumes:
      - .:/app
      - tmp_data:/app/tmp
    depends_on:
      - db
      - redis
    restart: unless-stopped
    user: root
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[s]idekiq'"]
      interval: 60s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: mariadb:11.5.2
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-password}
      - MYSQL_DATABASE=${DB_NAME:-progrando_${RAILS_ENV:-development}}
      - MYSQL_USER=${DB_USER:-progrando}
      - MYSQL_PASSWORD=${DB_PASSWORD:-password}
    restart: unless-stopped
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y mariadb-server &&
        docker-entrypoint.sh mariadbd
      "
    healthcheck:
      test: [ "CMD", "/usr/bin/mariadb", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-password}", "-e", "SELECT 1;" ]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mariadb_data:
  tmp_data:
  redis_data: